paths:
  /api/users/consult-phoneNumber:
    get:
      tags:
        - Users
      summary: Check if phone number is registered
      description: |
        Checks if a phone number is already registered in the system.
        Useful for registration flows and password reset processes.
      operationId: consultPhoneNumber
      parameters:
        - name: phoneNumber
          in: query
          required: true
          description: Phone number to check
          schema:
            type: string
            pattern: '^(\+56)?[0-9]{8,9}$'
            example: "+56912345678"
      responses:
        '200':
          description: Phone number consultation completed
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PhoneNumberConsultResponse'
              examples:
                phone_exists:
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      exists: true
                phone_not_exists:
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      exists: false
        '400':
          description: Invalid phone number format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/users/reset-password:
    patch:
      tags:
        - Users
      summary: Reset user password
      description: |
        Resets the user's password using a valid reset token obtained through OTP verification.
        The phone number in the request must match the one in the reset token.
      operationId: resetPassword
      security:
        - resetTokenAuth: []
      parameters:
        - name: Reset-Token
          in: header
          required: true
          description: Password reset token obtained from OTP verification
          schema:
            type: string
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIrNTY5MTIzNDU2NzgiLCJpYXQiOjE2MzUyNDM2MDB9.example"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
            examples:
              reset_password:
                value:
                  phoneNumber: "+56912345678"
                  newPassword: "newSecurePassword123"
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                password_reset:
                  value:
                    success: true
                    message: "Operation successful"
                    data: "Contraseña restablecida correctamente"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid or expired reset token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Phone number mismatch with token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/users/profile/me:
    get:
      tags:
        - Users
      summary: Get current user profile
      description: |
        Retrieves the profile information of the authenticated user.
      operationId: getCurrentUserProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserProfileResponse'
              examples:
                user_profile:
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      username: "juan_perez"
                      phoneNumber: "+56912345678"
                      description: "Vecino activo de la comunidad"
                      nameOfCommunity: "Villa Los Álamos"
        '401':
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    patch:
      tags:
        - Users
      summary: Update current user profile
      description: |
        Updates the profile information of the authenticated user.
        Only provided fields will be updated.
      operationId: updateCurrentUserProfile
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileDto'
            examples:
              update_profile:
                value:
                  firstName: "Juan Carlos"
                  lastName: "Pérez González"
                  email: "juan.carlos@email.com"
      responses:
        '200':
          description: Profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
              examples:
                profile_updated:
                  value:
                    success: true
                    message: "Operation successful"
                    data: "Perfil actualizado correctamente"
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Username already in use by another user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/users/profile/{id}:
    get:
      tags:
        - Users
      summary: Get user profile by ID
      description: |
        Retrieves the public profile information of a user by their ID.
        Only public information is returned.
      operationId: getUserProfileById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: integer
            format: int64
            example: 1
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/PublicUserProfileResponse'
              examples:
                public_profile:
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      username: "juan_perez"
                      description: "Vecino activo de la comunidad"
                      nameOfCommunity: "Villa Los Álamos"
        '401':
          description: Unauthorized - User not authenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    ResetPasswordDto:
      type: object
      properties:
        phoneNumber:
          type: string
          pattern: '^(\+56)?[0-9]{8,9}$'
          description: Phone number associated with the account
          example: "+56912345678"
        newPassword:
          type: string
          minLength: 8
          maxLength: 100
          description: New password for the account
          example: "newSecurePassword123"
      required:
        - phoneNumber
        - newPassword

    UpdateProfileDto:
      type: object
      properties:
        username:
          type: string
          minLength: 1
          maxLength: 50
          description: User's username
          example: "juan_perez"
        description:
          type: string
          maxLength: 500
          description: User's profile description
          example: "Vecino activo de la comunidad, interesado en actividades deportivas"

    PhoneNumberConsultResponse:
      type: object
      properties:
        exists:
          type: boolean
          description: Whether the phone number is registered
          example: true
      required:
        - exists

    UserProfileResponse:
      type: object
      properties:
        username:
          type: string
          description: User's username
        phoneNumber:
          type: string
          description: User's phone number
        description:
          type: string
          description: User's profile description
        nameOfCommunity:
          type: string
          description: Name of the user's community
      required:
        - username
        - phoneNumber

    PublicUserProfileResponse:
      type: object
      properties:
        username:
          type: string
          description: User's username
        description:
          type: string
          description: User's profile description
        nameOfCommunity:
          type: string
          description: Name of the user's community
      required:
        - username

  securitySchemes:
    resetTokenAuth:
      type: apiKey
      in: header
      name: Reset-Token