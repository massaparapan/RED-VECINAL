paths:
  /api/users/consult-phoneNumber:
    get:
      tags:
        - Users
      summary: Check phone number registration
      description: |
        Checks if a user is registered based on their phone number.
        Returns a success response containing a map with a boolean value indicating
        whether the phone number is registered.
      operationId: consultPhoneNumber
      parameters:
        - name: phoneNumber
          in: query
          description: The phone number to check for registration
          required: true
          schema:
            type: string
            pattern: '^(\+56)?[1-9][0-9]{8}$'
            example: "+56912345678"
          example: "+56912345678"
      responses:
        '200':
          description: Phone number check completed successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: object
                        properties:
                          exists:
                            type: boolean
                            description: Indicates if the phone number is registered
                        required:
                          - exists
              examples:
                registered_number:
                  summary: Registered phone number
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      exists: true
                unregistered_number:
                  summary: Unregistered phone number
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      exists: false
        '400':
          description: Invalid input parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                invalid_phone:
                  value:
                    success: false
                    message: "Invalid phone number format"
                    error: "VALIDATION_ERROR"

  /api/users/reset-password:
    patch:
      tags:
        - Users
      summary: Reset user password
      description: |
        Resets the user's password after validating the reset token.
        Ensures the phone number in the token matches the one in the request body.
        Throws an exception if the phone numbers do not match.
      operationId: resetPassword
      parameters:
        - name: Reset-Token
          in: header
          description: The token used to validate the password reset request
          required: true
          schema:
            type: string
            format: jwt
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDto'
            examples:
              reset_request:
                summary: Valid reset request
                value:
                  phoneNumber: "+56912345678"
                  newPassword: "newPassword123"
      responses:
        '200':
          description: Password reset successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        type: string
                        example: "Password reset successfully"
              examples:
                successful_reset:
                  value:
                    success: true
                    message: "Operation successful"
                    data: "Password reset successfully"
        '400':
          description: Invalid input data or invalid token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Phone number does not match the token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                phone_mismatch:
                  value:
                    success: false
                    message: "Phone number does not match the request"
                    error: "PHONE_NUMBER_MISMATCH"
        '401':
          description: Invalid or expired reset token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/users/profile/me:
    get:
      tags:
        - Users
      summary: Get authenticated user profile
      description: |
        Retrieves the profile of the currently authenticated user.
        Returns a success response containing the user's profile details.
        Requires valid JWT authentication.
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserProfile'
              examples:
                user_profile:
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      id: 1
                      phoneNumber: "+56912345678"
                      firstName: "John"
                      lastName: "Doe"
                      email: "john.doe@email.com"
                      address: "123 Main Street, Santiago"
                      isVerified: true
                      createdAt: "2025-01-15T10:30:00Z"
        '401':
          description: Invalid or expired authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/users/profile/{id}:
    get:
      tags:
        - Users
      summary: Get user profile by ID
      description: |
        Retrieves the profile of a user by their ID.
        Returns a success response containing the profile details of the specified user.
        May require special permissions depending on configuration.
      operationId: getUserProfileById
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The ID of the user whose profile is to be retrieved
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          example: 123
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/SuccessResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UserProfile'
              examples:
                found_profile:
                  value:
                    success: true
                    message: "Operation successful"
                    data:
                      id: 123
                      phoneNumber: "+56987654321"
                      firstName: "Jane"
                      lastName: "Smith"
                      email: "jane.smith@email.com"
                      address: "456 Oak Avenue, Valpara√≠so"
                      isVerified: true
                      createdAt: "2025-02-01T15:45:00Z"
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                user_not_found:
                  value:
                    success: false
                    message: "User not found"
                    error: "USER_NOT_FOUND"
        '401':
          description: Invalid authentication token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Insufficient permissions to access the requested profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: true
        message:
          type: string
          description: Descriptive message of the operation
          example: "Operation successful"
        data:
          description: Response data (variable type depending on endpoint)
      required:
        - success
        - message

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the operation was successful
          example: false
        message:
          type: string
          description: Descriptive error message
          example: "Operation failed"
        error:
          type: string
          description: Specific error code
          example: "VALIDATION_ERROR"
        timestamp:
          type: string
          format: date-time
          description: Timestamp when the error occurred
          example: "2025-06-10T10:30:00Z"
      required:
        - success
        - message

    ResetPasswordDto:
      type: object
      properties:
        phoneNumber:
          type: string
          pattern: '^(\+56)?[1-9][0-9]{8}$'
          description: User's phone number
          example: "+56912345678"
        newPassword:
          type: string
          minLength: 8
          maxLength: 100
          description: User's new password
          example: "newPassword123"
      required:
        - phoneNumber
        - newPassword

    UserProfile:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: User's unique ID
          example: 1
        phoneNumber:
          type: string
          description: User's phone number
          example: "+56912345678"
        firstName:
          type: string
          description: User's first name
          example: "John"
        lastName:
          type: string
          description: User's last name
          example: "Doe"
        email:
          type: string
          format: email
          description: User's email address
          example: "john.doe@email.com"
        address:
          type: string
          description: User's address
          example: "123 Main Street, Santiago"
        isVerified:
          type: boolean
          description: Indicates if the user is verified
          example: true
        createdAt:
          type: string
          format: date-time
          description: Profile creation date
          example: "2025-01-15T10:30:00Z"
      required:
        - id
        - phoneNumber
        - firstName
        - lastName
        - isVerified
        - createdAt

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication